unmanaged implementation in class zbp_rap_i_trav_d01 unique;
//strict ( 2 );

define behavior for ZRAP_I_TRAV_D01 alias Travel
//late numbering
lock master
//authorization master ( instance )
etag master LastChangedAt
{

  field ( readonly ) TravelID, TotalPrice;
  field ( mandatory ) AgencyID, CustomerID, BeginDate, EndDate;
  create;
  update;
  delete;
  action ( features : instance ) set_status_booked result [1] $self;
  association _Booking { create ( features : instance ); }
  mapping for /dmo/travel control /dmo/s_travel_intx
    {
      AgencyID     = agency_id;
      BeginDate    = begin_date;
      BookingFee   = booking_fee;
      CurrencyCode = currency_code;
      CustomerID   = customer_id;
      EndDate      = end_date;
      Status       = status;
      TotalPrice   = total_price;
      Description  = description;
      TravelID     = travel_id;
    }
  // mapping
}

define behavior for ZRAP_I_BOOKING_D01 alias booking
implementation in class zbp_rap_i_booking_d01 unique
//late numbering
lock dependent by _Travel
//authorization dependent by _Travel
etag dependent by _Travel // this is child of travel
{
  field ( readonly ) TravelID, BookingID;
  field ( mandatory ) BookingDate, CustomerID, AirlineID, ConnectionID, FlightDate;
  update;
  delete;
  association _Travel;
  mapping for /dmo/booking control /dmo/s_booking_intx
    {
      BookingID    = booking_id;
      AirlineID    = carrier_id;
      BookingDate  = booking_date;
      ConnectionID = connection_id;
      CurrencyCode = currency_code;
      CustomerID   = customer_id;
      FlightDate   = flight_date;
      FlightPrice  = flight_price;
      TravelID     = travel_id;
    }
}